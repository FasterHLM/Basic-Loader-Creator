//системные переменные основного бейсика
KSTATE  equ #5C00 //#5С00...#5С07 Восемь байт составляют два блока, которые используются программой обслуживания клавиатуры. Для организации работы внешних программ эти переменные практически не применяются
LAST_K  equ #5C08 //код последней нажатой клавиши
REPDEL  equ #5C09 //величина задержки (в 1/50 с) между нажатием клавиши и началом автоматического повторения нажатия (автоповтора)
REPPER  equ #5C0A //период автоповтора (в 1/50 с) при длительном нажатии на клавишу. Изменяя системные переменные REPDEL и REPPER, можно настроить клавиатуру под конкретного пользователя
DEFADD  equ #5C0B //адрес первого параметра пользовательской функции, определенной оператором DEF FN, в процессе ее обработки
K_DATA  equ #5C0D //код цвета, заданный цифровой клавишей в режиме курсора Е
TVDATA  equ #5C0E //первый байт - код управления, заданный цифровой клавишей в режиме курсора Е. Второй байт - первый параметр в AT или TAB
STRMS   equ #5C10 //#5С10...#5С35 Область хранения информации о потоках
CHARS   equ #5C36 //адрес размещения текущего набора символов. После запуска компьютера адрес стандартного набора #3C00
                  //поскольку символы с кодами от #00 до #1F являются управляющими и в фонте не определяются, то адрес действительного положения текущего набора на #100 (32x8) больше,
  	          //чем указанный системной переменной CHARS. например, для назначения текущим фонта, расположенного с адреса #FD00, в переменную CHARS необходимо записать число #FC00 (#FD00-#100)
RASP    equ #5C38 //число, пропорциональное длительности звукового сигнала, предупреждающего о заполнении буфера редактора
PIP     equ #5C39 //число, пропорциональное длительности звучания сигнала при нажатии на клавишу
ERR_NR  equ #5C3A //число, на единицу меньшее кода сообщения, выдаваемого при ошибке (включая сообщение о нормальном завершении выполнения программы 0 ОК)
FLAGS   equ #5C3B //отдельные биты этой переменной используются операционной системой (см. также переменную FLAGS2):
  	          //бит 0 установлен, если не нужно выводить пробел перед бейсик-оператором. (При выводе на экран или печати большинства операторов Бейсика перед ними выводится пробел)
  	          //бит 1 установлен, для вывода используется поток #3 (обычно — принтер)
  	          //бит 2 при вводе символа в режиме курсора L, сброшен при вводе в режиме курсора К
  	          //бит 3 установлен при ожидании ввода символа в режиме курсора L, сброшен при ожидании ввода в режиме К
  	          //бит 4 установлен, если работает расширенный интерпретатор Бейсика в ZX Spectrum 128; при работе в стандартной конфигурации сброшен
  	          //бит 5 устанавливается при нажатии на любую символьную клавишу. Код клавиши можно прочитать из переменной LAST_K
  	          //бит 6 установлен при обработке числового выражения, сброшен при обработке символьного
  	          //бит 7 установлен при выполнении программы, сброшен при проверке синтаксиса введенной строки
TV_FLAG equ #5C3C //отдельные биты этой переменной используются для управления выводом на экран:
  	          //бит 0 установлен при выводе на служебный экран, сброшен при выводе наосновной экран
  	          //бит 3 установлен, если режим вывода на экран мог измениться и требуется проверка режима
  	          //бит 4 установлен при выводе листинга программы
  	          //бит 5 установлен при необходимости очистить служебный экран (например, перед выводом сообщения)
ERR_SP  equ #5C3D //адрес, на который устанавливается указатель стека при запуске программы обработки ошибок. Изменив значение переменной, можно подключить собственные процедуры обработки ошибок
LIST_SP equ #5C3F //сохраняет адрес вершины стека в процессе вывода листинга программы
MODE    equ #5C41 //число, определяющее режим ввода с клавиатуры:
  	          //0 — очередной символ вводится в режимах курсора К, L или С
  	          //1 — очередной символ вводится в режиме курсора Е
                  //2 и более — очередной и последующие символы вводятся в режиме курсора G
  	          //при значении, превышающем 2, меняется внешний вид курсора
NEWPPC  equ #5C42 //номер строки бейсик-программы, в которой расположен следующий выполняемый оператор
NSPPS   equ #5C44 //номер следующего зыполняемого оператора в строке бейсик-программы
   	          //переменные NEWPPC и NSPPS можно использовать для перехода к произвольному оператору в бейсик-программе
PPC     equ #5C45 //номер строки бейсик-программы, в которой расположен выполняемый оператор
  	          //при выполнении оператора в непосредственном режиме в переменную записано число #FFFE
SUBPPC  equ #5C47 //номер выполняемого оператора в строке бейсик-программы
BORDCR  equ #5C48 //атрибуты служебного экрана. Цветом фона служебного экрана определяется цвет бордюра
E_PPC   equ #5C49 //номер строки бейсик-программы, отмеченной курсором
VARS    equ #5C4B //адрес начала области переменных бейсик-программы
DEST    equ #5C4D //адрес первого символа имени обрабатываемой в данный момент переменной
CHANS   equ #5C4F //адрес начала области информации о каналах
CURCHL  equ #5C51 //адрес первого байта описателя текущего канала в области информации о каналах
PROG    equ #5C53 //адрес начала бейсик-программы. Вычитанием значения системной переменной VARS из значения PROG, вычисляется длина бейсик-программы
NXTLIN  equ #5C55 //адрес начала следующей строки бейсик-программы
DATADD  equ #5C57 //адрес последнего считанного оператором READ  объекта данных в операторах DATA
E_LINE  equ #5C59 //адрес начала редактируемой строки
K_CUR   equ #5C5B //адрес символа редактируемой строки, на который установлен курсор
CH_ADD  equ #5C5D //адрес следующего обрабатываемого символа в бейсик-программе. Переменная может быть полезна при использовании внешних процедур обработки синтаксиса
X_PTR   equ #5C5F //адрес символа бейсик-строки, вслед за которым установлен знак ? при обнаружении синтаксической ошибки. В операциях, не связанных с проверкой синтаксиса,
  	          //переменная может использоваться компьютером для временного хранения другой служебной информации
WORKSP  equ #5C61 //адрес начала рабочей области бейсик-программы
STKBOT  equ #5C63 //адрес начала стека калькулятора
STKEND  equ #5C65 //адрес вершины стека калькулятора
BREG    equ #5C67 //регистр В калькулятора
MEM     equ #5C68 //адрес области памяти, используемой калькулятором. Как правило, для этих целей используется системная область МЕМВОТ
FLAGS2  equ #5C6A //отдельные биты этой переменной используются операционной системой (см. также переменную FLAGS)
  	          //бит 0 установлен при необходимости очистить основной экран после ввода строки
  	          //бит 1 установлен, если буфер принтера уже использовался
  	          //бит 2 установлен, если основной экран очищен
  	          //бит 3 установлен при использовании режима курсора С, сброшен при использовании режима курсора L. Изменением состояния этого бита можно программно устанавливать режимы регистров клавиатуры С или L
  	          //бит 4 установлен при использовании режима курсора К
  	          //биты 5,6,7 используются интерфейсом ZX-LPRINT III (при наличии такового)
DF_SZ   equ #5C6B //количество строк в служебном экране. Число строк в основном экране может быть увеличено до максимума (24 строки) выполнением оператора РОКЕ 23659,0
  	          //однако, если количество строк в служебном экране меньше 2, то при попытке вывода на него любого сообщения, например, OK или BREAK—CONT repeats,
  	          //система будет вести себя самым неприличным образом. Запись в DF_SZ нуля — один из способов защиты бейсик-npoгpaмм от останова
S_TOP   equ #5C6C //номер строки бейсик-программы, начиная с которой выводится автоматический листинг (по нажатию клавиши Enter)
OLDPPC  equ #5C6E //номер строки бейсик-программы, начиная с которой будет продолжено выполнение программы после ввода оператора CONTINUE
OSPCC   equ #5C70 //номер оператора в строке бейсик-программы, начиная с которого будет продолжено выполнение программы после ввода оператора CONTINUE
FLAGX   equ #5C71 //используется при обработке оператора INPUT
  	          //бит 1 установлен, если оператором INPUT вводится новая переменная
  	          //бит 5 установлен при работе в режиме ввода оператором INPUT, сброшен — в режиме редактирования бейсик-строки
  	          //бит 6 установлен при обработке строки, введенной оператором INPUT
  	          //бит 7 установлен, если выполняется оператор INPUT LINE
STRLEN  equ #5C72 //длина обрабатываемой символьной переменной (ранее определенной) либо идентификатор числовой или новой символьной переменной (младший байт)
T_ADDR  equ #5C74 //адрес следующего элемента в таблицах синтаксиса, расположенных в ПЗУ
SEED    equ #5C76 //значение, используемое для вычисления псевдослучайного числа. После выполнения оператора RANDOMIZE, переменная SEED изменяется в соответствии со введенным параметром.
  		  //если RANDOMIZE использовался без параметров, то в переменную SEED копируются два младших байта из переменной FRAMES
FRAMES  equ #5C78 //#5C78/79/7A Системный счетчик. После запуска (сброса) компьютера обнуляется
  		  //при работе со стандартной процедурой обработки прерываний значение счетчика каждые 1/50 секунды увеличивается на единицу
UDG     equ #5C7B //адрес начала области, используемой для размещения определяемых пользователем символов
COORDS  equ #5C7D //координаты X и Y последней изображенной на экране точки
P_POSN  equ #5C7F //содержит значение 33—n, где n — номер следующей позиции печати в буфере принтера
PR_CC   equ #5C80 //младший байт адреса области, используемой в текущий момент под буфер принтера
NOT_USED equ #5C81 //в большинстве описаний эта переменная характеризуется как неиспользуемая (о чем говорит ее название),
  	          //но в действительности она содержит старший байт адреса области, используемой в текущий момент под буфер принтера
  	          //при выводе на ZX Printer операционная система подготавливает строку к печати в буфере, расположенном по адресу, указанному переменными PR_CC и NOT_USED
ECHO_E  equ #5C82 //позиция (номер строки и колонка) следующего символа вводимой бейсик-строки
DF_CC   equ #5C84 //адрес байта, соответствующего верхней линии точек знакоместа основного экрана, в которое будет осуществлен вывод следующего символа
DFCCL   equ #5C86 //адрес байта, соответствующего верхней линии точек знакоместа служебного экрана, в которое будет осуществлен вывод следующего символа
S_POSN  equ #5C88 //координаты следующей позиции вывода на основной экран. Координаты хранятся в виде: 24—nr, 33-nc, где nr — номер строки, пс — номер столбца
SPONSL  equ #5C8A //координаты следующей позиции вывода на служебный экран
SCR_CT  equ #5C8C //число, на единицу большее количества строк, передвигаемых по экрану вверх без запроса scroll?
  	          //изменением содержимого этой ячейки можно добиться безостановочного скроллинга экрана при выводе текста
ATTR_P  equ #5C8D //постоянные атрибуты экрана, задаваемые операторами PAPER, INK, FLASH и BRIGHT
MASK_P  equ #5C8E //маска для разделения постоянных (ATTR_T) и текущих атрибутов при выводе на экран. Если в MASK_P бит установлен, то соответствующий бит атрибута при выводе на экран не изменяется
ATTR_T  equ #5C8F //временные атрибуты, используемые при выводе на экран, например, оператором PRINT INK 7// PAPER 1//"..."
MASK_T  equ #5C90 //маска для разделения временных (ATTR_P) и текущих атрибутов при выводе на экран
P_FLAG  equ #5C91 //параметры вывода на экран. Четные биты используются для постоянных параметров, нечетные — для временных:
  	          //бит 0/1 установлен при использовании OVER 1
  	          //бит 2/3 установлен при использовании INVERSE 1
  	          //бит 4/5 установлен при использовании INK 9
  	          //бит 6/7 установлен при использовании PAPER 9
MEMBOT  equ #5C92 //#5C92...#5CAF Область, используемая калькулятором для размещения значений, которые неудобно обрабатывать через стек калькулятора
NMIADD  equ #5CB0 //не используется. Авторы системы, очевидно, предполагали задействовать эту системную переменную для обслуживания немаскируемых прерываний,
  	          //но из-за допущенной неточности переменная действительно оказалась неиспользуемой. Интерфейсы некоторых внешних устройств задействуют эту переменную
  	          //например, интерфейс принтера ZX Lprint III хранит в ней значение скорости обмена по последовательному каналу
RAMTOP  equ #5CB2 //последний адрес в ОЗУ, разрешенный к использованию интерпретатором Бейсика. Устанавливается оператором CLEAR
P_RAMT  equ #5CB4 //адрес последнего байта физического ОЗУ. Устанавливается при инициализации компьютера после теста доступной памяти
  	          //в исправном компьютере с объемом оперативной памяти 48К переменная должна содержать значение #FFFF